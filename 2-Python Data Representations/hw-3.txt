Question 1
Given the list my_list = [1, 3, 5, 7, 9], which of the following slices returns the list [5, 7, 9]?
- my_list[2 : 5]
- my_list[2 : ]

Question 2
While of the following expressions returns a tuple of length one?
- (1,)
- tuple([1])

Question 3
Why does following code snippet raise an error in Python?

instructors = ("Scott", "Joe", "John", "Stephen")
instructors[2 : 4] = []
print(instructors)

- Tuples are immutable.

Question 4
Given a non-empty list my_list, which item in the list does the operation my_list.pop() remove?
- The item my_list[-1], The method pop() removes the last item in the list.

Question 5
What output does the following code snippet print to the console?

my_list = [1, 3, 5, 7, 9]
my_list.reverse()
print(my_list.reverse())

- None, Since reverse() is a method, it mutates my_list and returns None.

Question 6
Given a list fib = [0, 1], write a loop that appends the sum of the last two items in fib to the end of fib.  
What is the value of the last item in fib after twenty iterations of this loop?  
- 10946

Question 7
This algorithm computes all prime numbers up to a specified bound.  
The provided code below implements all but the innermost loop for this algorithm in Python.

"""
Implement the Sieve of Eratosthenes
https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes
"""

def compute_primes(bound):
    """
    Return a list of the prime numbers in range(2, bound)
    """
    
    answer = list(range(2, bound))
    for divisor in range(2, bound):
        # Remove appropriate multiples of divisor from answer
        pass
    return answer

print(len(compute_primes(200)))
print(len(compute_primes(2000)))

- 303

def compute_primes(bound):
    """
    Return a list of the prime numbers in range(2, bound)
    """
    
    answer = list(range(2, bound))
    for divisor in range(2, bound):
        for stride in range(2 * divisor, bound, divisor):
            if stride in answer:
                answer.remove(stride)
    return answer

print(len(compute_primes(200)))
print(len(compute_primes(2000)))
